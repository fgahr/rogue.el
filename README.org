* rogue.el -- A Simple Roguelike for Emacs

#+begin_example
Level:  1
Room:   101
Health: 10/10
Mana:   10/10

Weapon: SWORD
Armor:  BUCKLER
Spell:  HEAL

 ┏━━━━━━━┫ ┣━━━━━━━┓
 ┃                 ┃
 ┃                 ┃
 ┃                 ┃
 ┃                 ┃
 ┃        S        ┃
 ┃                 ┻
 ┃        @
 ┃                 ┳
 ┃     S           ┃
 ┃                 ┃
 ┃                 ┃
 ┃                 ┃
 ┃                 ┃
 ┗━━━━━━━━━━━━━━━━━┛


[up/down/left/right] move -- [s] cast current spell
[i] access inventory -- [m] access magic menu
[q] quit the game
#+end_example

  This is mainly a learning project to familiarize myself with basic Emacs
  programming.

  Inspired by 7drl, although having no playing experience, I decided to try my
  hand at a little roguelike myself. The limitations of Elisp as a language
  do not really hurt here.

  As of now, I have no idea how to properly distribute Elisp code. For now,
  open the =rogue.el= file, then ~M-x eval-buffer~ and ~M-x rogue~.

  I will attempt to add some in-game documentation when the game matures and
  there are actually interesting things to do.

* Code
  There is no game loop. Quite possibly a classic game loop would simplify
  things. However, since in a typical (well, this one at least) roguelike all
  events are triggered by player actions, we can get away by simply using the
  right keymaps at the right time and trigger all other actions after the
  player's move. However, this design requires rather unwieldy handling of
  global state and managing rather intricate function call chains. As of
  writing, this is not yet a problem.
